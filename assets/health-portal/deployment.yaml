apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: healthportal
  name: api
spec:
  selector:
    matchLabels:
      app: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: docker.io/binocarlos/px-health-portal-api:latest
        imagePullPolicy: "Always"
        ports:
        - containerPort: 80
        envFrom:
        - secretRef:
            name: clusters
        env:
        - name: NODE_ENV
          value: production
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: healthportal
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: docker.io/binocarlos/px-health-portal-frontend:latest
        imagePullPolicy: "Always"
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: healthportal
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: api
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: healthportal
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: healthportal
  namespace: healthportal
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - http:
      paths:
      - path: /api/v1
        pathType: Prefix
        backend:
          service:
            name: api
            port:
              number: 80
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80
